"use strict";(self.webpackChunkdocumentacion_django_basico=self.webpackChunkdocumentacion_django_basico||[]).push([[766],{7042:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=n(4848),o=n(8453);const i={sidebar_position:4},s="Configurar aplicaci\xf3n",c={id:"inicio_rapido/configurar_app",title:"Configurar aplicaci\xf3n",description:"para que la aplicaci\xf3n que acabas de crear funcione correctamente, debes configurarla en tu proyecto. A continuaci\xf3n, te mostramos c\xf3mo hacerlo.",source:"@site/docs/inicio_rapido/configurar_app.md",sourceDirName:"inicio_rapido",slug:"/inicio_rapido/configurar_app",permalink:"/documentacion_django_basico/docs/inicio_rapido/configurar_app",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Iniciar aplicaci\xf3n",permalink:"/documentacion_django_basico/docs/inicio_rapido/iniciar_app"},next:{title:"Lanzar aplicaci\xf3n",permalink:"/documentacion_django_basico/docs/inicio_rapido/lanzar_app"}},l={},d=[{value:"Crear Templates:",id:"crear-templates",level:2},{value:"Crear URLs:",id:"crear-urls",level:2},{value:"Crear Modelos:",id:"crear-modelos",level:2},{value:"Registrar los modelos en la aplicaci\xf3n",id:"registrar-los-modelos-en-la-aplicaci\xf3n",level:3},{value:"Crear Vistas:",id:"crear-vistas",level:2}];function t(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"configurar-aplicaci\xf3n",children:"Configurar aplicaci\xf3n"}),"\n",(0,r.jsx)(a.p,{children:"para que la aplicaci\xf3n que acabas de crear funcione correctamente, debes configurarla en tu proyecto. A continuaci\xf3n, te mostramos c\xf3mo hacerlo."}),"\n",(0,r.jsx)(a.h2,{id:"crear-templates",children:"Crear Templates:"}),"\n",(0,r.jsxs)(a.p,{children:["Los templates en Django son archivos HTML que contienen el dise\xf1o de tu aplicaci\xf3n. Puedes utilizar etiquetas y filtros de Django en los templates para mostrar datos din\xe1micos en tu aplicaci\xf3n. Para crear un template en tu aplicaci\xf3n, debes crear un directorio llamado ",(0,r.jsx)(a.code,{children:"templates"})," en el directorio de la aplicaci\xf3n y colocar los archivos HTML dentro de este directorio."]}),"\n",(0,r.jsx)(a.p,{children:"Por ejemplo, si deseas crear un template para mostrar una lista de productos en tu aplicaci\xf3n, puedes hacerlo de la siguiente manera:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-html",children:'\x3c!-- templates/inicio.html --\x3e\r\n\r\n<!DOCTYPE html>\r\n<html lang="es">\r\n<head>\r\n    <meta charset="UTF-8">\r\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\r\n    <title>Inicio</title>\r\n</head>\r\n<body>\r\n    <h1>Lista de Productos</h1>\r\n    <ul>\r\n        {% for producto in productos %}\r\n            <li>{{ producto.nombre }} - {{ producto.precio }}</li>\r\n        {% endfor %}\r\n    </ul>\r\n</body>\r\n</html>\n'})}),"\n",(0,r.jsxs)(a.p,{children:["en este ejemplo, se ha creado un template llamado ",(0,r.jsx)(a.code,{children:"inicio.html"})," que muestra una lista de productos. Se utiliza la etiqueta ",(0,r.jsx)(a.code,{children:"{% for producto in productos %}"})," para iterar sobre la lista de productos y mostrar el nombre y precio de cada producto en la lista."]}),"\n",(0,r.jsx)(a.h2,{id:"crear-urls",children:"Crear URLs:"}),"\n",(0,r.jsxs)(a.p,{children:["Las URLs en Django son patrones de URL que mapean las solicitudes HTTP a las vistas de tu aplicaci\xf3n. Para crear una URL en tu aplicaci\xf3n, debes definir una lista de rutas en el archivo ",(0,r.jsx)(a.code,{children:"urls.py"})," de la aplicaci\xf3n y asignar cada ruta a una vista espec\xedfica."]}),"\n",(0,r.jsx)(a.p,{children:"Por ejemplo, si deseas crear una URL para mostrar la lista de productos en tu aplicaci\xf3n, puedes hacerlo de la siguiente manera:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:"# urls.py\r\n\r\nfrom django.urls import path\r\nfrom . import views\r\n\r\nurlpatterns = [\r\n    path('', views.inicio, name='inicio'), # ruta para mostrar la lista de productos\r\n]\n"})}),"\n",(0,r.jsxs)(a.p,{children:["en este ejemplo, se ha definido una ruta vac\xeda que mapea a la vista ",(0,r.jsx)(a.code,{children:"inicio"}),". Cuando un usuario accede a la URL ra\xedz de la aplicaci\xf3n, se mostrar\xe1 la lista de productos en la p\xe1gina."]}),"\n",(0,r.jsx)(a.p,{children:"ahora con los templates y las URLs creadas, puedes configurar las vistas de tu aplicaci\xf3n para mostrar los datos en el navegador."}),"\n",(0,r.jsx)(a.p,{children:"el proyecto se debe ver de la siguiente manera:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-plaintext",children:"mysite/\r\n    manage.py\r\n    mysite/\r\n        __init__.py\r\n        settings.py\r\n        urls.py\r\n        asgi.py\r\n        wsgi.py\r\n    myapp/\r\n        __init__.py\r\n        admin.py\r\n        apps.py\r\n        migrations/\r\n            __init__.py\r\n        models.py\r\n        tests.py\r\n        views.py\r\n        templates/\r\n            inicio.html\r\n        urls.py\n"})}),"\n",(0,r.jsx)(a.h2,{id:"crear-modelos",children:"Crear Modelos:"}),"\n",(0,r.jsxs)(a.p,{children:["Los modelos en Django son clases que representan tablas en la base de datos. Cada modelo define un conjunto de campos y m\xe9todos que Django utiliza para interactuar con la base de datos. Para crear un modelo en tu aplicaci\xf3n, debes definir una clase que herede de ",(0,r.jsx)(a.code,{children:"models.Model"})," y definir los campos que deseas incluir en la tabla."]}),"\n",(0,r.jsx)(a.p,{children:"Por ejemplo, si deseas crear un modelo para almacenar informaci\xf3n de usuarios en tu aplicaci\xf3n, puedes hacerlo de la siguiente manera:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:"# models.py\r\n\r\nfrom django.db import models\r\n\r\nclass Categoria(models.Model): # clase que representa una tabla en la base de datos\r\n    nombre = models.CharField(max_length=100) # campo de texto con un m\xe1ximo de 100 caracteres\r\n    descripcion = models.TextField() # campo de texto largo\r\n    fecha_creacion = models.DateTimeField(auto_now_add=True) # campo de fecha y hora con valor predeterminado de la fecha y hora actual\r\n\r\n    def __str__(self): # m\xe9todo para representar el objeto como una cadena\r\n        return self.nombre # devuelve el nombre de la categor\xeda\r\n\r\nclass Producto(models.Model): # clase que representa una tabla en la base de datos\r\n    nombre = models.CharField(max_length=100) # campo de texto con un m\xe1ximo de 100 caracteres\r\n    descripcion = models.TextField() # campo de texto largo\r\n    precio = models.DecimalField(max_digits=10, decimal_places=2) # campo de n\xfamero decimal con un m\xe1ximo de 10 d\xedgitos y 2 decimales\r\n    categoria = models.ForeignKey(Categoria, on_delete=models.CASCADE) # campo de clave for\xe1nea que hace referencia a la tabla de categoria y se elimina en cascada\r\n    fecha_creacion = models.DateTimeField(auto_now_add=True) # campo de fecha y hora con valor predeterminado de la fecha y hora actual\r\n\r\n    def __str__(self): # m\xe9todo para representar el objeto como una cadena\r\n        return self.nombre, self.precio # devuelve el nombre y precio del producto\n"})}),"\n",(0,r.jsxs)(a.p,{children:["en este ejemplo, se han definido dos modelos: ",(0,r.jsx)(a.code,{children:"Categoria"})," y ",(0,r.jsx)(a.code,{children:"Producto"}),". El modelo ",(0,r.jsx)(a.code,{children:"Categoria"})," tiene tres campos: ",(0,r.jsx)(a.code,{children:"nombre"}),", ",(0,r.jsx)(a.code,{children:"descripcion"})," y ",(0,r.jsx)(a.code,{children:"fecha_creacion"}),". El modelo ",(0,r.jsx)(a.code,{children:"Producto"})," tiene cinco campos: ",(0,r.jsx)(a.code,{children:"nombre"}),", ",(0,r.jsx)(a.code,{children:"descripcion"}),", ",(0,r.jsx)(a.code,{children:"precio"}),", ",(0,r.jsx)(a.code,{children:"categoria"})," y ",(0,r.jsx)(a.code,{children:"fecha_creacion"}),". El campo ",(0,r.jsx)(a.code,{children:"categoria"})," en el modelo ",(0,r.jsx)(a.code,{children:"Producto"})," es una clave for\xe1nea que hace referencia al modelo ",(0,r.jsx)(a.code,{children:"Categoria"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"registrar-los-modelos-en-la-aplicaci\xf3n",children:"Registrar los modelos en la aplicaci\xf3n"}),"\n",(0,r.jsx)(a.p,{children:"despu\xe9s de definir los modelos, debes crear las migraciones para aplicar los cambios en la base de datos. Para ello, ejecuta el siguiente comando en tu terminal:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"python manage.py makemigrations\n"})}),"\n",(0,r.jsxs)(a.p,{children:["este comando crear\xe1 un archivo de migraci\xf3n en el directorio ",(0,r.jsx)(a.code,{children:"migrations"})," de cada aplicaci\xf3n que contenga los cambios en los modelos. Para aplicar las migraciones y crear las tablas en la base de datos, ejecuta el siguiente comando:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"python manage.py migrate\n"})}),"\n",(0,r.jsx)(a.p,{children:"este comando aplicar\xe1 las migraciones pendientes y crear\xe1 las tablas en la base de datos."}),"\n",(0,r.jsx)(a.h2,{id:"crear-vistas",children:"Crear Vistas:"}),"\n",(0,r.jsx)(a.p,{children:"Las vistas en Django son funciones o clases que procesan las solicitudes HTTP y devuelven una respuesta al navegador. Para crear una vista en tu aplicaci\xf3n, debes definir una funci\xf3n o clase que maneje la l\xf3gica de la solicitud y devuelva una respuesta al navegador."}),"\n",(0,r.jsx)(a.p,{children:"Por ejemplo, si deseas crear una vista para mostrar una lista de productos en tu aplicaci\xf3n, puedes hacerlo de la siguiente manera:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-python",children:"# views.py\r\n\r\nfrom django.shortcuts import render\r\nfrom .models import Producto, Categoria\r\n\r\ndef inicio(request): # funci\xf3n que maneja la solicitud y devuelve una respuesta\r\n    productos = Producto.objects.all() # consulta todos los productos en la base de datos\r\n    categorias = Categoria.objects.all() # consulta todas las categor\xedas en la base de datos\r\n    contexto = {\r\n        'productos': productos, # datos que se pasan a la plantilla\r\n        'categorias': categorias, # datos que se pasan a la plantilla\r\n    }\r\n    return render(request, 'inicio.html', contexto) # renderiza la plantilla 'inicio.html' con los datos del contexto\r\n\n"})})]})}function p(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>c});var r=n(6540);const o={},i=r.createContext(o);function s(e){const a=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:a},e.children)}}}]);